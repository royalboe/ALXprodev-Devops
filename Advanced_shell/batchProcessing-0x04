#!/bin/bash

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
ERROR_FILE="errors.txt"
> "$ERROR_FILE"

for name in "${POKEMON_LIST[@]}"; do
    {
        echo "Fetching data for $name..."
        API_URL="https://pokeapi.co/api/v2/pokemon/$name"
        OUTPUT_FILE="$name.json"

        HTTP_STATUS=$(curl -s -w "%{http_code}" -o "$OUTPUT_FILE" "$API_URL")

        if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "Saved data to $OUTPUT_FILE ✅"
        else
            echo "❌ Failed to fetch data for $name (HTTP $HTTP_STATUS)" | tee -a "$ERROR_FILE"
            echo "Date: $(date)" >> "$ERROR_FILE"
            echo "--------------------------------------" >> "$ERROR_FILE"
        fi
    } &
done

# Show all running background jobs
jobs

# Wait for all jobs and kill any that hang
while jobs > /dev/null; do
    sleep 1
    jobs -p | while read pid; do
        # Optional: add a timeout check or condition
        kill -0 "$pid" 2>/dev/null || true
    done
    # Break loop when no more jobs
    [ -z "$(jobs -p)" ] && break
done

echo "All Pokémon data fetches completed!"
